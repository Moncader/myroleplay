-- Auto generated by WoWBench 1.11.0.a1 from "C:/Program Files/World of Warcraft/interface/addons/MyRolePlay/MyRolePlay.xml" on 2006-06-18 02:32:09
local WOWB_XMLFILE="C:/Program Files/World of Warcraft/interface/addons/MyRolePlay/MyRolePlay.xml";
local WOWB_XMLFILENOPATH="C:/Program Files/World of Warcraft/interface/addons/MyRolePlay/MyRolePlay.xml";
local WOWB_TAG = { [0]={content=""} }
local WOWB_PARENTOBJECT = WOWB_RootFrame;
local xfpc = WOWB_XMLFileParserContext:New(WOWB_XMLFILE);

do -- <Ui ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1
local WOWB_TAG = { [0]={  xmltag="Ui",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["xmlns"] ="http://www.blizzard.com/wow/ui/",
["xmlns:xsi"] ="http://www.w3.org/2001/XMLSchema-instance",
["xsi:schemaLocation"] ="http://www.blizzard.com/wow/ui/ C:\\Projects\\WoW\\Bin\\Interface\\FrameXML\\UI.xsd",
}};
WOWB_PARENT[0]["Ui"] = WOWB_TAG;
do -- <Script ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=4
local WOWB_TAG = { [0]={  xmltag="Script",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=4,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="localization.lua",
}};
if not WOWB_EXECCOMPILED then
  tinsertbeforeval(WOWB_AllFilesForTOC, WOWB_XMLFILENOPATH, WOWB_ProcessFilename(WOWB_TAG[0].file, true));
  dofile(WOWB_TAG[0].file);
end
tinsert(WOWB_PARENT[0], WOWB_TAG);
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <Script ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=6
local WOWB_TAG = { [0]={  xmltag="Script",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=6,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="MyRolePlay.lua",
}};
if not WOWB_EXECCOMPILED then
  tinsertbeforeval(WOWB_AllFilesForTOC, WOWB_XMLFILENOPATH, WOWB_ProcessFilename(WOWB_TAG[0].file, true));
  dofile(WOWB_TAG[0].file);
end
tinsert(WOWB_PARENT[0], WOWB_TAG);
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <Script ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=7
local WOWB_TAG = { [0]={  xmltag="Script",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=7,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="MyRolePlayWindow.lua",
}};
if not WOWB_EXECCOMPILED then
  tinsertbeforeval(WOWB_AllFilesForTOC, WOWB_XMLFILENOPATH, WOWB_ProcessFilename(WOWB_TAG[0].file, true));
  dofile(WOWB_TAG[0].file);
end
tinsert(WOWB_PARENT[0], WOWB_TAG);
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <Script ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=8
local WOWB_TAG = { [0]={  xmltag="Script",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=8,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="MyRolePlayAddonCompat.lua",
}};
if not WOWB_EXECCOMPILED then
  tinsertbeforeval(WOWB_AllFilesForTOC, WOWB_XMLFILENOPATH, WOWB_ProcessFilename(WOWB_TAG[0].file, true));
  dofile(WOWB_TAG[0].file);
end
tinsert(WOWB_PARENT[0], WOWB_TAG);
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=11
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=11,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpUniversalFrameToggle",
["text"] ="",
["parent"] ="CharacterFrame",
["hidden"] ="true",
["toplevel"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=12
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=12,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=13
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=13,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=15
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=15,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=16
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=16,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="RIGHT",
["relativeTo"] ="CharacterFrame",
["relativePoint"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=17
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=17,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=18
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=18,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-85,
["y"] =-7,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=22
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=22,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=23
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=23,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_UNIVERSAL_FRAME_TOGGLE_TT, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=28
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=28,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=31
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=31,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_ToggleButton_OnClick();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=36
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=36,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=37
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=37,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=39
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=39,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=40
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=40,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=42
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=42,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Highlight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=43
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=43,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <NormalText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=45
local WOWB_TAG = { [0]={  xmltag="NormalText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=45,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="$parentText",
["inherits"] ="GameFontNormalSmall",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then WOWB_PARENT[0]["NormalText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <HighlightText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=46
local WOWB_TAG = { [0]={  xmltag="HighlightText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=46,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlightSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=49
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=49,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpUniversalFrame",
["parent"] ="CharacterFrame",
["enableMouse"] ="true",
["toplevel"] ="true",
["movable"] ="true",
["hidden"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=50
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=50,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=51
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=51,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =384,
["y"] =405,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=53
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=53,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=54
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=54,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="CharacterFrame",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=55
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=55,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=56
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=56,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-56,
["y"] =-34.5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=60
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=60,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=61
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=61,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="BACKGROUND",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=62
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=62,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\MyRolePlay\\Textures\\PersonalFrameTopLeft.tga",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=63
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=63,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=64
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=64,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =256,
["y"] =256,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=66
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=66,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=67
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=67,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=68
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=68,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=69
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=69,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=74
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=74,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\MyRolePlay\\Textures\\PersonalFrameTopRight.tga",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=75
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=75,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=76
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=76,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =128,
["y"] =256,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=78
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=78,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=79
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=79,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=80
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=80,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=81
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=81,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=86
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=86,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\MyRolePlay\\Textures\\PersonalFrameBottomLeft.tga",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=87
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=87,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=88
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=88,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =256,
["y"] =256,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=90
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=90,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=91
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=91,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=92
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=92,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=93
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=93,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=98
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=98,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\MyRolePlay\\Textures\\PersonalFrameBottomRight.tga",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=99
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=99,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=100
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=100,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =128,
["y"] =256,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=102
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=102,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=103
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=103,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="BOTTOMRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=104
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=104,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=105
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=105,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=112
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=112,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=114
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=114,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=115
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=115,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_OnLoad();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEvent ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=118
local WOWB_TAG = { [0]={  xmltag="OnEvent",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=118,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEvent"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_OnEvent(event);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <CheckButton ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=124
local WOWB_TAG = { [0]={  xmltag="CheckButton",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=124,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharacterButton",
["parent"] ="mrpUniversalFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_CheckButton);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_CheckButton);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=125
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=125,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=126
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=126,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =32,
["y"] =32,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=128
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=128,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=129
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=129,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpUniversalFrame",
["relativePoint"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=130
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=130,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=131
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=131,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-35,
["y"] =-75,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=135
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=135,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=136
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=136,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="BACKGROUND",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=137
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=137,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\SpellBook\\SpellBook-SkillLineTab",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=138
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=138,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=139
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=139,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =64,
["y"] =64,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=141
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=141,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=142
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=142,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=143
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=143,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=144
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=144,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-3,
["y"] =11,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=151
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=151,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=152
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=152,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpCheckButtons();\n\t\t\t\tmrpHideAllFrames();\n\t\t\t\tmrpCharacterButton:Disable();\n\t\t\t\tmrpCharacterFrame:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=158
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=158,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_CHARACTER_BUTTON_TT_HEADER, 0.2, 0.8, 0.8, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_CHARACTER_BUTTON_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=164
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=164,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=170
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=170,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\MyRolePlay\\Buttons\\ButtonCharacterInfo.tga",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=171
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=171,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\ButtonHilight-Square",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <CheckedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=172
local WOWB_TAG = { [0]={  xmltag="CheckedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=172,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\CheckButtonHilight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["CheckedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=175
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=175,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharacterFrame",
["parent"] ="mrpUniversalFrame",
["enableMouse"] ="true",
["toplevel"] ="true",
["movable"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=176
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=176,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=177
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=177,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =300,
["y"] =405,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=179
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=179,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=180
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=180,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="CharacterFrame",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=181
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=181,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=182
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=182,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-56,
["y"] =-34.5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=186
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=186,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=188
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=188,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=189
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=189,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_OnLoad();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEvent ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=192
local WOWB_TAG = { [0]={  xmltag="OnEvent",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=192,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEvent"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t--mrp_OnEvent(event);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=198
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=198,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharacterFrameIdentityFrame",
["parent"] ="mrpCharacterFrame",
["hidden"] ="false",
["toplevel"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=199
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=199,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=200
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=200,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =90,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=202
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=202,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=203
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=203,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpCharacterFrame",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=204
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=204,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=205
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=205,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =25,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=209
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=209,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=210
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=210,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="BACKGROUND",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=211
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=211,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpIdentityBackgroundTop",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=212
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=212,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=213
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=213,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =16,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=215
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=215,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=216
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=216,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=217
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=217,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=218
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=218,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=222
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=222,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0,
["bottom"] =0.125,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=224
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=224,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpIdentityBackgroundMiddle",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=225
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=225,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=226
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=226,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =90,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=228
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=228,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=229
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=229,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpIdentityBackgroundTop",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=230
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=230,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=231
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=231,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=235
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=235,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0.125,
["bottom"] =0.1953125,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=237
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=237,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpIdentityBackgroundBottom",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=238
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=238,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=239
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=239,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =16,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=241
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=241,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=242
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=242,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpIdentityBackgroundMiddle",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=243
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=243,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=244
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=244,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=248
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=248,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0.484375,
["bottom"] =0.609375,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=251
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=251,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=252
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=252,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpIdentityFrameTitle",
["file"] ="Interface\\DialogFrame\\UI-DialogBox-Header",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=253
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=253,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=254
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=254,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =150,
["y"] =40,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=256
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=256,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=257
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=257,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=258
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=258,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=259
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=259,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=264
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=264,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="IdentityText",
["inherits"] ="GameFontNormal",
["text"] ="",
["justifyH"] ="CENTER",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=265
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=265,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=266
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=266,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=268
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=268,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=269
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=269,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=270
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=270,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=271
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=271,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =6,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=275
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=275,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =0.2,
["g"] =0.5,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=280
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=280,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharacterFrameAppearanceFrame",
["parent"] ="mrpCharacterFrame",
["hidden"] ="false",
["toplevel"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=281
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=281,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=282
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=282,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =90,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=284
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=284,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=285
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=285,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpCharacterFrameIdentityFrame",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=286
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=286,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=287
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=287,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-45,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=292
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=292,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=293
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=293,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="BACKGROUND",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=294
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=294,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpAppearanceBackgroundTop",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=295
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=295,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=296
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=296,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =16,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=298
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=298,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=299
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=299,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=300
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=300,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=301
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=301,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=305
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=305,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0,
["bottom"] =0.125,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=307
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=307,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpAppearanceBackgroundMiddle",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=308
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=308,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=309
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=309,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =90,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=311
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=311,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=312
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=312,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpAppearanceBackgroundTop",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=313
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=313,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=314
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=314,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=318
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=318,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0.125,
["bottom"] =0.1953125,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=320
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=320,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpAppearanceBackgroundBottom",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=321
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=321,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=322
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=322,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =16,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=324
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=324,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=325
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=325,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpAppearanceBackgroundMiddle",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=326
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=326,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=327
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=327,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=331
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=331,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0.484375,
["bottom"] =0.609375,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=334
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=334,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=335
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=335,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpAppearanceFrameTitle",
["file"] ="Interface\\DialogFrame\\UI-DialogBox-Header",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=336
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=336,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=337
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=337,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =40,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=339
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=339,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=340
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=340,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=341
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=341,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=342
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=342,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=347
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=347,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="AppearanceText",
["inherits"] ="GameFontNormal",
["text"] ="",
["justifyH"] ="CENTER",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=348
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=348,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=349
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=349,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =85,
["y"] =15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=351
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=351,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=352
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=352,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=353
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=353,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=354
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=354,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =6,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=358
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=358,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =0.2,
["g"] =0.5,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=363
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=363,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharacterFrameLoreFrame",
["parent"] ="mrpCharacterFrame",
["hidden"] ="true",
["toplevel"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=364
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=364,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=365
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=365,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =220,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=367
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=367,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=368
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=368,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpCharacterFrame",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=369
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=369,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=370
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=370,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =25,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=374
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=374,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=375
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=375,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="BACKGROUND",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=376
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=376,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpLoreBackgroundTop",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=377
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=377,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=378
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=378,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =16,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=380
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=380,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=381
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=381,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=382
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=382,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=383
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=383,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=387
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=387,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0,
["bottom"] =0.125,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=389
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=389,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpLoreBackgroundMiddle",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=390
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=390,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=391
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=391,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =220,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=393
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=393,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=394
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=394,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpLoreBackgroundTop",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=395
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=395,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=396
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=396,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=400
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=400,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0.125,
["bottom"] =0.1953125,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=402
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=402,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpLoreBackgroundBottom",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-StatBackground",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=403
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=403,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=404
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=404,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =290,
["y"] =16,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=406
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=406,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=407
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=407,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpLoreBackgroundMiddle",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=408
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=408,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=409
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=409,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=413
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=413,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.8984375,
["top"] =0.484375,
["bottom"] =0.609375,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=416
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=416,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=417
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=417,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpLoreFrameTitle",
["file"] ="Interface\\DialogFrame\\UI-DialogBox-Header",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=418
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=418,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=419
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=419,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =150,
["y"] =40,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=421
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=421,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=422
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=422,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=423
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=423,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=424
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=424,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=429
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=429,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="LoreText",
["inherits"] ="GameFontNormal",
["text"] ="",
["justifyH"] ="CENTER",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=430
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=430,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=431
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=431,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=433
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=433,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=434
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=434,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=435
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=435,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=436
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=436,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =6,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=440
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=440,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =0.2,
["g"] =0.5,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=447
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=447,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpFirstNameText",
["parent"] ="mrpCharacterFrameIdentityFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=448
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=448,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=449
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=449,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=451
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=451,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=452
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=452,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpCharacterFrameIdentityFrame",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=453
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=453,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=454
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=454,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =10,
["y"] =-15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=458
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=458,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=459
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=459,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=460
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=460,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="FirstnameTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=461
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=461,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=462
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=462,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=464
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=464,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=465
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=465,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=466
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=466,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=467
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=467,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=472
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=472,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="FirstnameText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=473
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=473,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=474
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=474,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=476
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=476,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=477
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=477,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="FirstnameTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=478
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=478,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=479
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=479,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=483
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=483,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=487
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=487,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=488
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=488,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=491
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=491,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_FIRSTNAME_TT, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(\"\", 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=497
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=497,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=500
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=500,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Identification.Firstname\", MRP_LOCALE_MRPXML_FIRSTNAME_EDITBOX_TEXT, 12);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=506
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=506,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpMiddleNameText",
["parent"] ="mrpCharacterFrameIdentityFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=507
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=507,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=508
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=508,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =80,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=510
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=510,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=511
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=511,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpFirstNameText",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=512
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=512,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=513
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=513,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=517
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=517,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=518
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=518,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=519
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=519,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="MiddlenameTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=520
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=520,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=521
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=521,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =80,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=523
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=523,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=524
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=524,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=525
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=525,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=526
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=526,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=531
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=531,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="MiddlenameText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=532
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=532,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=533
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=533,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =80,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=535
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=535,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=536
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=536,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="MiddlenameTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=537
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=537,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=538
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=538,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=542
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=542,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=546
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=546,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=547
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=547,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=550
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=550,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_MIDDLENAME_TT, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=555
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=555,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=558
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=558,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Identification.Middlename\", MRP_LOCALE_MRPXML_MIDDLENAME_EDITBOX_TEXT, 14);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=564
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=564,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpSurnameText",
["parent"] ="mrpCharacterFrameIdentityFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=565
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=565,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=566
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=566,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =125,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=568
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=568,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=569
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=569,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpMiddleNameText",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=570
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=570,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=571
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=571,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=575
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=575,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=576
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=576,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=577
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=577,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="SurnameTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=578
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=578,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=579
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=579,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =125,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=581
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=581,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=582
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=582,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=583
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=583,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=584
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=584,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=589
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=589,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="SurnameText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=590
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=590,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=591
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=591,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =125,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=593
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=593,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=594
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=594,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="SurnameTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=595
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=595,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=596
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=596,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=600
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=600,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=604
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=604,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=605
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=605,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=608
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=608,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_SURNAME_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_SURNAME_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=614
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=614,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=617
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=617,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Identification.Surname\", MRP_LOCALE_MRPXML_SURNAME_EDITBOX_TEXT, 18);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=623
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=623,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpPrefixText",
["parent"] ="mrpCharacterFrameIdentityFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=624
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=624,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=625
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=625,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=627
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=627,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=628
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=628,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpFirstNameText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=629
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=629,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=630
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=630,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=634
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=634,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=635
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=635,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=636
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=636,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="PrefixTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=637
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=637,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=638
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=638,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=640
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=640,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=641
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=641,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=642
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=642,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=643
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=643,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=648
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=648,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="PrefixText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=649
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=649,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=650
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=650,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =60,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=652
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=652,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=653
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=653,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="PrefixTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=654
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=654,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=655
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=655,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=659
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=659,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=663
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=663,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=664
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=664,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=667
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=667,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_PREFIX_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_PREFIX_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=673
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=673,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=676
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=676,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Identification.Prefix\", MRP_LOCALE_MRPXML_PREFIX_EDITBOX_TEXT, 12);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=682
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=682,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpTitleText",
["parent"] ="mrpCharacterFrameIdentityFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=683
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=683,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=684
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=684,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =180,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=686
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=686,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=687
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=687,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpPrefixText",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=688
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=688,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=689
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=689,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=693
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=693,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=694
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=694,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=695
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=695,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="TitleTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=696
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=696,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=697
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=697,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =180,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=699
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=699,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=700
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=700,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=701
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=701,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=702
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=702,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=707
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=707,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="TitleText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=708
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=708,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=709
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=709,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =180,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=711
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=711,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=712
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=712,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="TitleTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=713
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=713,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=714
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=714,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=718
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=718,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=722
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=722,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=723
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=723,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=726
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=726,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_TITLE_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_TITLE_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=732
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=732,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=735
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=735,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Identification.Title\", MRP_LOCALE_MRPXML_TITLE_EDITBOX_TEXT, 36);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=741
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=741,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpNicknameText",
["parent"] ="mrpCharacterFrameIdentityFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=742
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=742,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=743
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=743,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =180,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=745
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=745,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=746
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=746,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpPrefixText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=747
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=747,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=748
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=748,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=752
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=752,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=753
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=753,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=754
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=754,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="FullNicknameHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=755
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=755,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=756
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=756,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =180,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=758
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=758,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=759
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=759,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=760
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=760,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=761
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=761,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=766
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=766,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="NicknameText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=767
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=767,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=768
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=768,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =180,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=770
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=770,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=771
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=771,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="FullNicknameHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=772
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=772,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=773
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=773,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=777
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=777,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=781
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=781,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=782
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=782,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=785
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=785,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_NICKNAME_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_NICKNAME_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=791
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=791,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=794
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=794,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Identification.Nickname\", MRP_LOCALE_MRPXML_NICKNAME_EDITBOX_TEXT, 36);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=800
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=800,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpHousenameText",
["parent"] ="mrpCharacterFrameIdentityFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=801
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=801,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=802
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=802,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =125,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=804
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=804,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=805
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=805,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpNicknameText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=806
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=806,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=807
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=807,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=811
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=811,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=812
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=812,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=813
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=813,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="HousenameTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=814
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=814,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=815
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=815,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =125,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=817
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=817,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=818
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=818,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=819
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=819,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=820
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=820,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=825
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=825,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="HousenameText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=826
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=826,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=827
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=827,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =125,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=829
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=829,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=830
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=830,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="HousenameTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=831
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=831,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=832
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=832,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=836
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=836,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=840
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=840,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=841
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=841,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=844
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=844,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_HOUSENAME_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_HOUSENAME_TT_TEXT1, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_HOUSENAME_TT_TEXT2, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=851
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=851,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=854
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=854,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Identification.Housename\", MRP_LOCALE_MRPXML_HOUSENAME_EDITBOX_TEXT, 18);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=862
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=862,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEyeColourText",
["parent"] ="mrpCharacterFrameAppearanceFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=863
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=863,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=864
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=864,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =70,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=866
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=866,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=867
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=867,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpCharacterFrameAppearanceFrame",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=868
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=868,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=869
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=869,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =10,
["y"] =-15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=873
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=873,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=874
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=874,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=875
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=875,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="EyeColourTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=876
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=876,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=877
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=877,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =70,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=879
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=879,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=880
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=880,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=881
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=881,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=882
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=882,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=887
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=887,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="EyeColourText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=888
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=888,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=889
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=889,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =70,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=891
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=891,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=892
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=892,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="EyeColourTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=893
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=893,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=894
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=894,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=898
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=898,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=902
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=902,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=903
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=903,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=906
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=906,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_EYECOLOUR_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=911
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=911,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=914
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=914,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Appearance.EyeColour\", MRP_LOCALE_MRPXML_EYECOLOUR_EDITBOX_TEXT, 14);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=920
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=920,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpHeightText",
["parent"] ="mrpCharacterFrameAppearanceFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=921
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=921,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=922
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=922,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =40,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=924
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=924,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=925
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=925,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpEyeColourText",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=926
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=926,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=927
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=927,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=931
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=931,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=932
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=932,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=933
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=933,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="HeightTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=934
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=934,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=935
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=935,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =45,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=937
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=937,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=938
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=938,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=939
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=939,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=940
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=940,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=945
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=945,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="HeightText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=946
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=946,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=947
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=947,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =40,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=949
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=949,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=950
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=950,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="HeightTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=951
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=951,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=952
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=952,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=956
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=956,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=960
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=960,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=961
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=961,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=964
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=964,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_HEIGHT_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=969
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=969,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=972
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=972,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Appearance.Height\", MRP_LOCALE_MRPXML_HEIGHT_EDITBOX_TEXT, 14);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=978
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=978,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpWeightText",
["parent"] ="mrpCharacterFrameAppearanceFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=979
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=979,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=980
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=980,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =40,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=982
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=982,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=983
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=983,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpHeightText",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=984
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=984,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=985
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=985,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=989
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=989,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=990
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=990,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=991
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=991,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WeightTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=992
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=992,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=993
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=993,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =45,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=995
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=995,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=996
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=996,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=997
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=997,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=998
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=998,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1003
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1003,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="WeightText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1004
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1004,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1005
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1005,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =40,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1007
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1007,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1008
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1008,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="WeightTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1009
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1009,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1010
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1010,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1014
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1014,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1018
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1018,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1019
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1019,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1022
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1022,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_WEIGHT_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_WEIGHT_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1028
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1028,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1031
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1031,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Appearance.Weight\", MRP_LOCALE_MRPXML_WEIGHT_EDITBOX_TEXT, 14);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1037
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1037,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCurrentEmotionText",
["parent"] ="mrpCharacterFrameAppearanceFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1038
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1038,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1039
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1039,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =110,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1041
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1041,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1042
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1042,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpWeightText",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1043
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1043,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1044
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1044,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1048
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1048,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1049
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1049,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1050
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1050,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="CurrentEmotionTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1051
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1051,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1052
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1052,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =110,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1054
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1054,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1055
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1055,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1056
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1056,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1057
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1057,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =3,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1062
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1062,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="CurrentEmotionText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1063
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1063,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1064
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1064,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =110,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1066
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1066,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1067
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1067,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="CurrentEmotionTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1068
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1068,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1069
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1069,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1073
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1073,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1077
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1077,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1078
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1078,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1081
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1081,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_EMOTION_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_EMOTION_TT_TEXT1, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_EMOTION_TT_TEXT2, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1088
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1088,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1091
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1091,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpEnterInformationDialog(\"Appearance.CurrentEmotion\", MRP_LOCALE_MRPXML_EMOTION_EDITBOX_TEXT, 64);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1097
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1097,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpDescriptionText",
["parent"] ="mrpCharacterFrameAppearanceFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1098
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1098,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1099
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1099,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =270,
["y"] =80,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1101
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1101,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1102
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1102,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpEyeColourText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1103
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1103,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1104
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1104,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1108
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1108,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1109
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1109,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1110
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1110,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="DescriptionTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1111
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1111,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1112
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1112,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =270,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1114
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1114,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1115
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1115,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1116
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1116,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1117
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1117,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1122
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1122,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="DescriptionText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1123
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1123,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1124
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1124,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =270,
["y"] =70,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1126
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1126,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1127
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1127,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="DescriptionTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1128
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1128,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1129
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1129,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1133
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1133,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1137
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1137,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1138
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1138,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1141
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1141,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MPR_LOCALE_MRPXML_DESCRIPTION_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MPR_LOCALE_MRPXML_DESCRIPTION_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1147
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1147,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1150
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1150,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpEnterInformationDialog(\"Appearance.Description\", MPR_LOCALE_MRPXML_DESCRIPTION_EDITBOX_TEXT, 1434);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1156
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1156,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharacterFrameNextPage",
["parent"] ="mrpCharacterFrame",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1157
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1157,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1158
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1158,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =32,
["y"] =32,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1160
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1160,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1161
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1161,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
["relativeTo"] ="mrpCharacterFrame",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1162
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1162,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1163
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1163,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =280,
["y"] =130,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1167
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1167,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1168
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1168,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="BACKGROUND",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1169
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1169,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharFrameNextPageText",
["inherits"] ="GameFontNormal",
["justifyH"] ="RIGHT",
["text"] ="",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1170
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1170,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1171
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1171,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="RIGHT",
["relativeTo"] ="mrpCharacterFrameNextPage",
["relativePoint"] ="LEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1176
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1176,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1177
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1177,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpCharacterFrameNextPage_OnClick();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1181
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1181,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-SpellbookIcon-NextPage-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1182
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1182,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-SpellbookIcon-NextPage-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <DisabledTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1183
local WOWB_TAG = { [0]={  xmltag="DisabledTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1183,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-SpellbookIcon-NextPage-Disabled",
}};
if(not bIgnored) then WOWB_PARENT[0]["DisabledTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1184
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1184,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-Common-MouseHilight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1187
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1187,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharacterFramePrevPage",
["parent"] ="mrpCharacterFrame",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1188
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1188,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1189
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1189,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =32,
["y"] =32,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1191
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1191,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1192
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1192,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
["relativeTo"] ="mrpCharacterFrame",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1193
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1193,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1194
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1194,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =70,
["y"] =130,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1198
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1198,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1199
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1199,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="BACKGROUND",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1200
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1200,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharFramePrevPageText",
["inherits"] ="GameFontNormal",
["justifyH"] ="RIGHT",
["text"] ="",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1201
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1201,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1202
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1202,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpCharacterFramePrevPage",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1207
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1207,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1208
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1208,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpCharacterFramePrevPage_OnClick();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1212
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1212,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-SpellbookIcon-PrevPage-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1213
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1213,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-SpellbookIcon-PrevPage-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <DisabledTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1214
local WOWB_TAG = { [0]={  xmltag="DisabledTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1214,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-SpellbookIcon-PrevPage-Disabled",
}};
if(not bIgnored) then WOWB_PARENT[0]["DisabledTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1215
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1215,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-Common-MouseHilight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1218
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1218,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpProfileSaveButton",
["parent"] ="mrpCharacterFrame",
["text"] ="",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1219
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1219,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1220
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1220,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =100,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1223
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1223,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1224
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1224,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
["relativeTo"] ="mrpCharacterFramePrevPage",
["relativePoint"] ="BOTTOM",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1225
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1225,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1226
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1226,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1231
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1231,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1232
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1232,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"curProfile\", MRP_LOCALE_MRPXML_PROFILE_SAVE_ONCLICK, 18);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1235
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1235,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_PROFILE_SAVE_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_PROFILE_SAVE_TT_TEXT1, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_PROFILE_SAVE_TT_TEXT2, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1242
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1242,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1246
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1246,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1247
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1247,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1249
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1249,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1250
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1250,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1252
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1252,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Highlight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1253
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1253,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <NormalText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1255
local WOWB_TAG = { [0]={  xmltag="NormalText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1255,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontNormalSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <HighlightText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1256
local WOWB_TAG = { [0]={  xmltag="HighlightText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1256,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlightSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1259
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1259,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpProfileNewButton",
["parent"] ="mrpCharacterFrame",
["text"] ="",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1260
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1260,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1261
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1261,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =100,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1264
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1264,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1265
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1265,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpProfileSaveButton",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1266
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1266,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1267
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1267,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1272
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1272,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1273
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1273,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"makeNewProfile\", MRP_LOCALE_MRPXML_PROFILE_NEW_ONCLICK, 18);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1276
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1276,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_PROFILE_NEW_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_PROFILE_NEW_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1282
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1282,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1286
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1286,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1287
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1287,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1289
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1289,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1290
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1290,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1292
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1292,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Highlight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1293
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1293,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <NormalText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1295
local WOWB_TAG = { [0]={  xmltag="NormalText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1295,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontNormalSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <HighlightText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1296
local WOWB_TAG = { [0]={  xmltag="HighlightText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1296,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlightSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1299
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1299,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpProfileDeleteButton",
["parent"] ="mrpCharacterFrame",
["text"] ="",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1300
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1300,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1301
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1301,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =100,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1304
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1304,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1305
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1305,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="LEFT",
["relativeTo"] ="mrpProfileNewButton",
["relativePoint"] ="RIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1306
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1306,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1307
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1307,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =5,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1312
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1312,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1313
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1313,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpDeleteProfile();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1316
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1316,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_PROFILE_DELETE_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_PROFILE_DELETE_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1322
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1322,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1326
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1326,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1327
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1327,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1329
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1329,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1330
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1330,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1332
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1332,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Highlight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1333
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1333,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <NormalText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1335
local WOWB_TAG = { [0]={  xmltag="NormalText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1335,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontNormalSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <HighlightText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1336
local WOWB_TAG = { [0]={  xmltag="HighlightText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1336,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlightSmall",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1339
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1339,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpProfileDropDown",
["parent"] ="mrpCharacterFrame",
["inherits"] ="UIDropDownMenuTemplate",
["enableMouse"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1340
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1340,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1341
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1341,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
["relativeTo"] ="mrpProfileNewButton",
["relativePoint"] ="BOTTOM",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1342
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1342,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1343
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1343,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =20,
["y"] =-2,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1347
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1347,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1348
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1348,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1349
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1349,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpProfileDropDownPreText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1350
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1350,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1351
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1351,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =100,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1353
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1353,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1354
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1354,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="RIGHT",
["relativeTo"] ="mrpProfileDropDown",
["relativePoint"] ="LEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1355
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1355,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1356
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1356,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =10,
["y"] =2,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1363
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1363,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnShow ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1364
local WOWB_TAG = { [0]={  xmltag="OnShow",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1364,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnShow"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpProfileDropDownHandler();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1370
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1370,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpHomecityText",
["parent"] ="mrpCharacterFrameLoreFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1371
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1371,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1372
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1372,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1374
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1374,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1375
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1375,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpCharacterFrameLoreFrame",
["relativePoint"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1376
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1376,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1377
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1377,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =10,
["y"] =-15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1381
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1381,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1382
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1382,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1383
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1383,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="HomecityTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1384
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1384,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1385
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1385,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1387
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1387,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1388
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1388,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1389
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1389,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1390
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1390,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1395
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1395,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="HomecityText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1396
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1396,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1397
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1397,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1399
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1399,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1400
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1400,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="HomecityTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1401
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1401,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1402
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1402,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1406
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1406,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1410
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1410,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1411
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1411,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1414
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1414,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_HOME_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_HOME_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1420
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1420,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1423
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1423,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Lore.Homecity\", MRP_LOCALE_MRPXML_HOME_EDITBOX_TEXT, 40);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1429
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1429,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpBirthcityText",
["parent"] ="mrpCharacterFrameLoreFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1430
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1430,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1431
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1431,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1433
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1433,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1434
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1434,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpHomecityText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1435
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1435,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1436
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1436,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1440
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1440,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1441
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1441,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1442
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1442,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="BirthcityTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1443
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1443,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1444
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1444,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1446
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1446,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1447
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1447,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1448
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1448,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1449
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1449,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1454
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1454,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="BirthcityText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1455
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1455,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1456
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1456,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =200,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1458
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1458,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1459
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1459,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="BirthcityTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1460
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1460,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1461
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1461,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1465
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1465,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1469
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1469,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1470
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1470,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1473
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1473,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_BIRTH_TT, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1478
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1478,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1481
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1481,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Lore.Birthcity\", MRP_LOCALE_MRPXML_BIRTH_EDITBOX_TEXT, 40);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1487
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1487,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpMottoText",
["parent"] ="mrpCharacterFrameLoreFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1488
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1488,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1489
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1489,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =260,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1491
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1491,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1492
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1492,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpBirthcityText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1493
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1493,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1494
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1494,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1498
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1498,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1499
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1499,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1500
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1500,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="MottoTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1501
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1501,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1502
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1502,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =260,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1504
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1504,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1505
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1505,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1506
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1506,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1507
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1507,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1512
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1512,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="MottoText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1513
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1513,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1514
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1514,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =260,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1516
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1516,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1517
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1517,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="MottoTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1518
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1518,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1519
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1519,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1523
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1523,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1527
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1527,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1528
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1528,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1531
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1531,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_MOTTO_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_MOTTO_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1537
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1537,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1540
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1540,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrp_EditTextPopup(\"Lore.Motto\", MRP_LOCALE_MRPXML_MOTTO_EDITBOX_TEXT, 85);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1546
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1546,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpHistoryText",
["parent"] ="mrpCharacterFrameLoreFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1547
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1547,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1548
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1548,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =270,
["y"] =80,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1550
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1550,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1551
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1551,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpMottoText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1552
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1552,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1553
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1553,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1557
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1557,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1558
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1558,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1559
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1559,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="HistoryTextHeader",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1560
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1560,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1561
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1561,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =270,
["y"] =10,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1563
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1563,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1564
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1564,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1565
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1565,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1566
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1566,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1571
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1571,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="HistoryText",
["inherits"] ="GameFontNormalSmall",
["text"] ="",
["justifyV"] ="TOP",
["justifyH"] ="LEFT",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1572
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1572,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1573
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1573,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =270,
["y"] =70,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1575
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1575,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1576
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1576,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="HistoryTextHeader",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1577
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1577,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1578
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1578,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Color ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1582
local WOWB_TAG = { [0]={  xmltag="Color",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1582,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["r"] =1,
["g"] =1,
["b"] =1,
}};
WOWB_PARENT[0]["Color"] = WOWB_TAG;
end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1586
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1586,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1587
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1587,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1590
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1590,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_HISTORY_TT_HEADER, 1.0, 0.8, 0.0, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_HISTORY_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1596
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1596,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1599
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1599,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpEnterInformationDialog(\"Lore.History\", MRP_LOCALE_MRPXML_HISTORY_EDITBOX_TEXT, 1434);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1605
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1605,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpRPDropDown",
["parent"] ="mrpCharacterFrameLoreFrame",
["inherits"] ="UIDropDownMenuTemplate",
["enableMouse"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1606
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1606,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1607
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1607,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpHistoryText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1608
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1608,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1609
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1609,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1613
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1613,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnShow ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1614
local WOWB_TAG = { [0]={  xmltag="OnShow",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1614,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnShow"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpRPDropDownHandler();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1620
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1620,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCSDropDown",
["parent"] ="mrpCharacterFrameLoreFrame",
["inherits"] ="UIDropDownMenuTemplate",
["enableMouse"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1621
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1621,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1622
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1622,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpRPDropDown",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1623
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1623,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1624
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1624,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1628
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1628,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnShow ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1629
local WOWB_TAG = { [0]={  xmltag="OnShow",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1629,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnShow"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpCSDropDownHandler();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1640
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1640,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEnterInformation",
["parent"] ="UIParent",
["enableMouse"] ="true",
["frameStrata"] ="DIALOG",
["toplevel"] ="true",
["movable"] ="true",
["hidden"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1641
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1641,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1642
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1642,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =480,
["y"] =300,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Backdrop ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1644
local WOWB_TAG = { [0]={  xmltag="Backdrop",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1644,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["bgFile"] ="Interface\\Addons\\MyRolePlay\\Textures\\EnterInformationBackground.tga",
["edgeFile"] ="Interface\\DialogFrame\\UI-DialogBox-Border",
["tile"] ="true",
}};
WOWB_PARENT[0]["Backdrop"] = WOWB_TAG;
do -- <BackgroundInsets ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1645
local WOWB_TAG = { [0]={  xmltag="BackgroundInsets",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1645,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["BackgroundInsets"] = WOWB_TAG;
do -- <AbsInset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1646
local WOWB_TAG = { [0]={  xmltag="AbsInset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1646,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =11,
["right"] =12,
["top"] =12,
["bottom"] =11,
}};
WOWB_PARENT[0]["AbsInset"] = WOWB_TAG;
end
end
do -- <TileSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1648
local WOWB_TAG = { [0]={  xmltag="TileSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1648,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["TileSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1649
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1649,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =32,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
do -- <EdgeSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1651
local WOWB_TAG = { [0]={  xmltag="EdgeSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1651,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["EdgeSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1652
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1652,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =32,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1655
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1655,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1656
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1656,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1657
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1657,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1658
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1658,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =200,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1662
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1662,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1663
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1663,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1664
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1664,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEnterInformationText",
["inherits"] ="GameFontHighlight",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1665
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1665,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1666
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1666,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =350,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1668
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1668,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1669
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1669,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1670
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1670,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1671
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1671,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =-16,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1678
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1678,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <ScrollFrame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1679
local WOWB_TAG = { [0]={  xmltag="ScrollFrame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1679,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEnterInformationScrollFrame",
["inherits"] ="UIPanelScrollFrameTemplate",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_ScrollFrame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_ScrollFrame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1680
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1680,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1681
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1681,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =400,
["y"] =170,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Backdrop ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1683
local WOWB_TAG = { [0]={  xmltag="Backdrop",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1683,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["bgFile"] ="Interface\\DialogFrame\\UI-DialogBox-Background",
["tile"] ="true",
}};
WOWB_PARENT[0]["Backdrop"] = WOWB_TAG;
do -- <BackgroundInsets ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1684
local WOWB_TAG = { [0]={  xmltag="BackgroundInsets",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1684,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["BackgroundInsets"] = WOWB_TAG;
do -- <AbsInset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1685
local WOWB_TAG = { [0]={  xmltag="AbsInset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1685,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =11,
["right"] =12,
["top"] =0,
["bottom"] =0,
}};
WOWB_PARENT[0]["AbsInset"] = WOWB_TAG;
end
end
do -- <TileSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1687
local WOWB_TAG = { [0]={  xmltag="TileSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1687,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["TileSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1688
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1688,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =32,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1691
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1691,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1692
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1692,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativeTo"] ="mrpEnterInformationText",
["relativePoint"] ="BOTTOMLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1693
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1693,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1694
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1694,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-35,
["y"] =-35,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Layers ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1698
local WOWB_TAG = { [0]={  xmltag="Layers",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1698,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Layers"]) then
  WOWB_PARENT[0]["Layers"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Layers"];
end
do -- <Layer ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1699
local WOWB_TAG = { [0]={  xmltag="Layer",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1699,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["level"] ="ARTWORK",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1700
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1700,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-ScrollBar",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1701
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1701,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1702
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1702,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =31,
["y"] =80,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1704
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1704,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1705
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1705,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
["relativePoint"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1706
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1706,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1707
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1707,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-13,
["y"] =-2,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1711
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1711,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =0.484375,
["top"] =0,
["bottom"] =1,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <Texture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1713
local WOWB_TAG = { [0]={  xmltag="Texture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1713,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\PaperDollInfoFrame\\UI-Character-ScrollBar",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1714
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1714,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1715
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1715,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =31,
["y"] =106,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1717
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1717,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1718
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1718,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="BOTTOMLEFT",
["relativePoint"] ="BOTTOMRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1719
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1719,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1720
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1720,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-13,
["y"] =2,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1724
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1724,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0.515625,
["right"] =1,
["top"] =0,
["bottom"] =0.4140625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
end
end
do -- <ScrollChild ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1728
local WOWB_TAG = { [0]={  xmltag="ScrollChild",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1728,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["ScrollChild"] = WOWB_TAG;
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1729
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1729,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEnterInformationScrollChild",
["enableMouse"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1730
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1730,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1731
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1731,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =360,
["y"] =160,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1733
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1733,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1734
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1734,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1735
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1735,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1736
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1736,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =20,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frames ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1740
local WOWB_TAG = { [0]={  xmltag="Frames",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1740,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Frames"]) then
  WOWB_PARENT[0]["Frames"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Frames"];
end
do -- <EditBox ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1741
local WOWB_TAG = { [0]={  xmltag="EditBox",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1741,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEnterInformationEditBox",
["multiLine"] ="true",
["letters"] =1434,
["enableMouse"] ="true",
["autoFocus"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_EditBox);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_EditBox);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1742
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1742,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1743
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1743,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =380,
["y"] =160,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1745
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1745,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1746
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1746,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPLEFT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1747
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1747,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1748
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1748,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =18,
["y"] =-15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1751
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1751,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1752
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1752,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1753
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1753,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =18,
["y"] =-15,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <FontString ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1757
local WOWB_TAG = { [0]={  xmltag="FontString",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1757,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlight",
}};
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1758
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1758,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnEscapePressed ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1759
local WOWB_TAG = { [0]={  xmltag="OnEscapePressed",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1759,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEscapePressed"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\t\t\t\t\t\tthis:ClearFocus()\n\t\t\t\t\t\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnTextChanged ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1762
local WOWB_TAG = { [0]={  xmltag="OnTextChanged",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1762,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnTextChanged"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\t\t\t\t\t\tScrollingEdit_OnTextChanged(mrpEnterInformationScrollFrame);\n\t\t\t\t\t\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1768
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1768,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnMouseUp ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1769
local WOWB_TAG = { [0]={  xmltag="OnMouseUp",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1769,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnMouseUp"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\t\t\t\tmrpEnterInformationEditBox:SetFocus();\n\t\t\t\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1775
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1775,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnLoad ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1776
local WOWB_TAG = { [0]={  xmltag="OnLoad",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1776,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLoad"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\t\tthis.scrollBarHideable = false;\n\t\t\t\t\t\tScrollFrame_OnScrollRangeChanged();\n\t\t\t\t\t\tmrpEnterInformationScrollFrameScrollBar:SetPoint(\"TOPLEFT\", \"mrpEnterInformationScrollFrame\", \"TOPRIGHT\", -4, -20);\n\t\t\t\t\t\tmrpEnterInformationScrollFrameScrollBar:SetPoint(\"BOTTOMLEFT\", \"mrpEnterInformationScrollFrame\", \"BOTTOMRIGHT\", -4, 20);\n\t\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1784
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1784,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEnterInformationBorderFrame",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1785
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1785,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1786
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1786,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =400,
["y"] =194,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Backdrop ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1788
local WOWB_TAG = { [0]={  xmltag="Backdrop",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1788,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["edgeFile"] ="Interface\\DialogFrame\\UI-DialogBox-Border",
["tile"] ="true",
}};
WOWB_PARENT[0]["Backdrop"] = WOWB_TAG;
do -- <BackgroundInsets ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1789
local WOWB_TAG = { [0]={  xmltag="BackgroundInsets",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1789,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["BackgroundInsets"] = WOWB_TAG;
do -- <AbsInset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1790
local WOWB_TAG = { [0]={  xmltag="AbsInset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1790,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =11,
["right"] =12,
["top"] =0,
["bottom"] =0,
}};
WOWB_PARENT[0]["AbsInset"] = WOWB_TAG;
end
end
do -- <TileSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1792
local WOWB_TAG = { [0]={  xmltag="TileSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1792,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["TileSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1793
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1793,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =32,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
do -- <EdgeSize ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1795
local WOWB_TAG = { [0]={  xmltag="EdgeSize",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1795,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["EdgeSize"] = WOWB_TAG;
do -- <AbsValue ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1796
local WOWB_TAG = { [0]={  xmltag="AbsValue",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1796,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["val"] =32,
}};
WOWB_PARENT[0]["AbsValue"] = WOWB_TAG;
end
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1799
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1799,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1800
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1800,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
["relativeTo"] ="mrpEnterInformationScrollFrame",
["relativePoint"] ="CENTER",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1801
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1801,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1802
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1802,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =0,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1808
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1808,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEnterInformationSaveButton",
["text"] ="",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1809
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1809,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1810
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1810,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =128,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1813
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1813,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1814
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1814,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
["relativeTo"] ="mrpEnterInformationScrollFrame",
["relativePoint"] ="BOTTOM",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1815
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1815,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1816
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1816,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-100,
["y"] =-20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1821
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1821,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1822
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1822,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\t\tmrpEnterInformationEditBox:SetText(mrpConvertEditInformation(mrpEnterInformationEditBox:GetText()));\n\t\t\t\t\t\tmrp_SaveVariable(mrpEnterInformationEditBox:GetText(), mrpEnterInformationLocation);\n\t\t\t\t\t\tmrpEnterInformationEditBox:SetText(\"\");\n\t\t\t\t\t\tmrpEnterInformation:Hide();\n\t\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1829
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1829,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1830
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1830,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1832
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1832,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1833
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1833,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1835
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1835,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Highlight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1836
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1836,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <NormalText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1838
local WOWB_TAG = { [0]={  xmltag="NormalText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1838,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontNormal",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <HighlightText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1839
local WOWB_TAG = { [0]={  xmltag="HighlightText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1839,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlight",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1842
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1842,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpEnterInformationCancelButton",
["text"] ="",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1843
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1843,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1844
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1844,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =128,
["y"] =20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1847
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1847,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1848
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1848,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOP",
["relativeTo"] ="mrpEnterInformationScrollFrame",
["relativePoint"] ="BOTTOM",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1849
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1849,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1850
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1850,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =100,
["y"] =-20,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1855
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1855,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1856
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1856,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\t\t\tmrpEnterInformationEditBox:SetText(\"\");\n\t\t\t\t\t\tmrpEnterInformation:Hide();\n\t\t\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1861
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1861,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Up",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1862
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1862,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1864
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1864,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Down",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1865
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1865,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1867
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1867,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\Buttons\\UI-DialogBox-Button-Highlight",
["alphaMode"] ="ADD",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

do -- <TexCoords ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1868
local WOWB_TAG = { [0]={  xmltag="TexCoords",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1868,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["left"] =0,
["right"] =1,
["top"] =0,
["bottom"] =0.625,
}};
WOWB_PARENT[0]["TexCoords"] = WOWB_TAG;
end
end
do -- <NormalText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1870
local WOWB_TAG = { [0]={  xmltag="NormalText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1870,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontNormal",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
do -- <HighlightText ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1871
local WOWB_TAG = { [0]={  xmltag="HighlightText",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1871,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["inherits"] ="GameFontHighlight",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightText"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_FontString);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_FontString);

end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1874
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1874,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnMouseUp ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1875
local WOWB_TAG = { [0]={  xmltag="OnMouseUp",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1875,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnMouseUp"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpEnterInformationEditBox:SetFocus();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnShow ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1878
local WOWB_TAG = { [0]={  xmltag="OnShow",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1878,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnShow"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpEnterInformationEditBox:SetFocus();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1885
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1885,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpCharacterFrameHelpButton",
["parent"] ="mrpCharacterFrame",
["toplevel"] ="true",
["hidden"] ="false",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1886
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1886,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1887
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1887,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =26,
["y"] =26,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1889
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1889,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1890
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1890,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="TOPRIGHT",
["relativeTo"] ="mrpUniversalFrame",
["relativePoint"] ="TOPRIGHT",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1891
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1891,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1892
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1892,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =-45,
["y"] =5,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1896
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1896,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnEnter ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1897
local WOWB_TAG = { [0]={  xmltag="OnEnter",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1897,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnEnter"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:SetOwner(this, \"ANCHOR_RIGHT\");\n\t\t\t\tGameTooltip:SetText(MRP_LOCALE_MRPXML_HELP_TT_HEADER, 1.0, 0.2, 0.2, 1 );\n\t\t\t\tGameTooltip:AddLine(MRP_LOCALE_MRPXML_HELP_TT_TEXT, 1.0, 1.0, 1.0, 1);\n\t\t\t\tGameTooltip:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnLeave ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1903
local WOWB_TAG = { [0]={  xmltag="OnLeave",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1903,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnLeave"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tGameTooltip:Hide();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1908
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1908,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\MyRolePlay\\Buttons\\ButtonHelp.tga",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
end
do -- <Button ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1911
local WOWB_TAG = { [0]={  xmltag="Button",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1911,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpButtonIconFrame",
["frameStrata"] ="LOW",
["parent"] ="TargetFrame",
["enableMouse"] ="true",
["movable"] ="true",
["hidden"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Button);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Button);

do -- <Size ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1912
local WOWB_TAG = { [0]={  xmltag="Size",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1912,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Size"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1913
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1913,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =28,
["y"] =28,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
end
do -- <Anchors ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1915
local WOWB_TAG = { [0]={  xmltag="Anchors",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1915,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Anchors"]) then
  WOWB_PARENT[0]["Anchors"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Anchors"];
end
do -- <Anchor ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1916
local WOWB_TAG = { [0]={  xmltag="Anchor",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1916,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["point"] ="CENTER",
["relativePoint"] ="CENTER",
["relativeTo"] ="TargetFrame",
}};
tinsert(WOWB_PARENT[0], WOWB_TAG);
do -- <Offset ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1917
local WOWB_TAG = { [0]={  xmltag="Offset",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1917,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["Offset"] = WOWB_TAG;
do -- <AbsDimension ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1918
local WOWB_TAG = { [0]={  xmltag="AbsDimension",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1918,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["x"] =2,
["y"] =0,
}};
WOWB_PARENT[0]["AbsDimension"] = WOWB_TAG;
end
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <NormalTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1922
local WOWB_TAG = { [0]={  xmltag="NormalTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1922,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\MyRolePlay\\Buttons\\MRPInfoBoxButton_Up.tga",
}};
if(not bIgnored) then WOWB_PARENT[0]["NormalTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <PushedTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1923
local WOWB_TAG = { [0]={  xmltag="PushedTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1923,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["file"] ="Interface\\AddOns\\MyRolePlay\\Buttons\\MRPInfoBoxButton_Down.tga",
}};
if(not bIgnored) then WOWB_PARENT[0]["PushedTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <HighlightTexture ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1924
local WOWB_TAG = { [0]={  xmltag="HighlightTexture",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1924,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["alphaMode"] ="ADD",
["file"] ="Interface\\Minimap\\UI-Minimap-ZoomButton-Highlight",
}};
if(not bIgnored) then WOWB_PARENT[0]["HighlightTexture"] = WOWB_TAG; end
WOWB_InheritType(WOWB_TAG, WBClass_Texture);
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Texture);

end
do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1925
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1925,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnDragStart ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1926
local WOWB_TAG = { [0]={  xmltag="OnDragStart",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1926,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnDragStart"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tthis:LockHighlight();\n\t\t\t\tmrpButtonIconDraggingFrame:Show();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnDragStop ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1930
local WOWB_TAG = { [0]={  xmltag="OnDragStop",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1930,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnDragStop"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpButtonIconDraggingFrame:Hide();\n\t\t\t\tthis:UnlockHighlight();\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
do -- <OnClick ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1934
local WOWB_TAG = { [0]={  xmltag="OnClick",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1934,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnClick"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpButtonIconFrameOnClick(arg1);\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
do -- <Frame ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1940
local WOWB_TAG = { [0]={  xmltag="Frame",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1940,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
["name"] ="mrpButtonIconDraggingFrame",
["parent"] ="UIParent",
["hidden"] ="true",
}};
if(not WOWB_ISVIRTUAL) then
  if(not WOWB_ParseXML_FixObjectName(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_LASTOBJNAME)) then
    bIgnored = true;
  end
end
local WOWB_LASTOBJNAME = WOWB_TAG[0].name;
if(not bIgnored) then tinsert(WOWB_PARENT[0], WOWB_TAG); end
WOWB_InheritType(WOWB_TAG, WBClass_Frame);
WOWB_TAG[0].parentobj = WOWB_PARENTOBJECT;
if(WOWB_PARENTOBJECT) then
  WOWB_PARENTOBJECT[0].children[WOWB_TAG] = true;
end
local WOWB_PARENTOBJECT = (not WOWB_ISVIRTUAL) and WOWB_TAG or nil;
if WOWB_TAG[0].inherits then
  WOWB_ParseXML_InheritObj(xfpc:Recurse(WOWB_TAG), WOWB_TAG, WOWB_TAG[0].inherits, WOWB_ISVIRTUAL);
end
WOWB_RunObjConstructors(WOWB_TAG, WBClass_Frame);

do -- <Scripts ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1941
local WOWB_TAG = { [0]={  xmltag="Scripts",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1941,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
if(not WOWB_PARENT[0]["Scripts"]) then
  WOWB_PARENT[0]["Scripts"] = WOWB_TAG;
else
  WOWB_TAG = WOWB_PARENT[0]["Scripts"];
end
do -- <OnUpdate ...>
local WOWB_PARENT = WOWB_TAG;
local bIgnored = false;
xfpc.linenum=1942
local WOWB_TAG = { [0]={  xmltag="OnUpdate",   xmlfile=WOWB_XMLFILE,  xmlfilelinenum=1942,  children={},  virtual=WOWB_ISVIRTUAL and "true",  content="",
}};
WOWB_PARENT[0]["OnUpdate"] = WOWB_TAG;
WOWB_TAG[0].content = WOWB_TAG[0].content .. "\n\t\t\t\tmrpButtonIconDraggingFrameOnUpdate(arg1)\n\t\t\t";
WOWB_ParseXML_CompileScriptNode(xfpc:Recurse(WOWB_TAG), WOWB_TAG);end
end
end
end
if(not WOWB_TAG[0][WOWB_ROOTXMLTAG]) then error("No <"..WOWB_ROOTXMLTAG.."> tag?"); end
WOWB_ParseXML_QueueScripts(WOWB_TAG[0][WOWB_ROOTXMLTAG]);

xfpc:Return();
